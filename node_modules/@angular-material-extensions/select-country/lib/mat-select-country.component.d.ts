import { EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { ControlValueAccessor, FormControl } from '@angular/forms';
import { MatAutocomplete, MatAutocompleteSelectedEvent, MatAutocompleteTrigger } from '@angular/material/autocomplete';
import { MatFormFieldAppearance } from '@angular/material/form-field';
/**
 * Country interface ISO 3166
 */
export interface Country {
    name: string;
    alpha2Code: string;
    alpha3Code: string;
    numericCode: string;
}
/**
 * @author Anthony Nahas
 * @since 11.19
 * @version 2.1.0
 */
export declare class MatSelectCountryComponent implements OnInit, OnChanges, OnDestroy, ControlValueAccessor {
    appearance: MatFormFieldAppearance;
    country: string;
    countries: Country[];
    label: string;
    placeHolder: string;
    disabled: boolean;
    nullable: boolean;
    readonly: boolean;
    class: string;
    itemsLoadSize: number;
    statesAutocompleteRef: MatAutocomplete;
    autocompleteTrigger: MatAutocompleteTrigger;
    onCountrySelected: EventEmitter<Country>;
    countryFormControl: FormControl;
    filteredOptions: Country[];
    debounceTime: number;
    filterString: string;
    private modelChanged;
    private subscription;
    private _value;
    get value(): Country;
    set value(value: Country);
    propagateChange: (_: any) => void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onBlur(): void;
    onOptionsSelected($event: MatAutocompleteSelectedEvent): void;
    writeValue(obj: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState?(isDisabled: boolean): void;
    autocompleteScroll(): void;
    inputChanged(value: string): void;
    ngOnDestroy(): void;
    private _filter;
}
